var e=Object.defineProperty,t=(t,r,o)=>(((t,r,o)=>{r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o})(t,"symbol"!=typeof r?r+"":r,o),o);const r=class e{constructor(){t(this,"baseUrl"),this.baseUrl={}.VITE_API_BASE_URL||"http://localhost:3001/api"}static getInstance(){return e.instance||(e.instance=new e),e.instance}async createCheckoutSession(e){try{return console.log("Creating checkout session:",e),await new Promise((e=>setTimeout(e,1e3))),{sessionId:`cs_test_${Math.random().toString(36).substr(2,9)}`}}catch(t){throw console.error("Error creating checkout session:",t),new Error("Failed to create checkout session")}}async verifyPayment(e){try{return console.log("Verifying payment:",e),await new Promise((e=>setTimeout(e,1e3))),{subscription:{id:`sub_${Math.random().toString(36).substr(2,9)}`,status:"active",current_period_start:Math.floor(Date.now()/1e3),current_period_end:Math.floor(Date.now()/1e3)+2592e3,cancel_at_period_end:!1}}}catch(t){throw console.error("Error verifying payment:",t),new Error("Payment verification failed")}}async cancelSubscription(e,t){try{console.log("Canceling subscription:",{subscriptionId:e,userId:t}),await new Promise((e=>setTimeout(e,1e3))),console.log("Subscription canceled successfully")}catch(r){throw console.error("Error canceling subscription:",r),new Error("Failed to cancel subscription")}}async reactivateSubscription(e,t){try{console.log("Reactivating subscription:",{subscriptionId:e,userId:t}),await new Promise((e=>setTimeout(e,1e3))),console.log("Subscription reactivated successfully")}catch(r){throw console.error("Error reactivating subscription:",r),new Error("Failed to reactivate subscription")}}};t(r,"instance");let o=r;const s=o.getInstance();export{o as PaymentAPI,s as paymentAPI};
//# sourceMappingURL=paymentApi-c6ae94d4.js.map
